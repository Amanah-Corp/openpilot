#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1710202414824543892) {
   out_1710202414824543892[0] = 0;
   out_1710202414824543892[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1710202414824543892[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1710202414824543892[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1710202414824543892[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1710202414824543892[5] = -sin(in_vec[1]);
   out_1710202414824543892[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1710202414824543892[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1710202414824543892[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1710202414824543892[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1710202414824543892[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1710202414824543892[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1710202414824543892[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1710202414824543892[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1710202414824543892[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1710202414824543892[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1710202414824543892[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1710202414824543892[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5471801279801416329) {
   out_5471801279801416329[0] = delta_x[0] + nom_x[0];
   out_5471801279801416329[1] = delta_x[1] + nom_x[1];
   out_5471801279801416329[2] = delta_x[2] + nom_x[2];
   out_5471801279801416329[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5471801279801416329[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5471801279801416329[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5471801279801416329[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5471801279801416329[7] = delta_x[6] + nom_x[7];
   out_5471801279801416329[8] = delta_x[7] + nom_x[8];
   out_5471801279801416329[9] = delta_x[8] + nom_x[9];
   out_5471801279801416329[10] = delta_x[9] + nom_x[10];
   out_5471801279801416329[11] = delta_x[10] + nom_x[11];
   out_5471801279801416329[12] = delta_x[11] + nom_x[12];
   out_5471801279801416329[13] = delta_x[12] + nom_x[13];
   out_5471801279801416329[14] = delta_x[13] + nom_x[14];
   out_5471801279801416329[15] = delta_x[14] + nom_x[15];
   out_5471801279801416329[16] = delta_x[15] + nom_x[16];
   out_5471801279801416329[17] = delta_x[16] + nom_x[17];
   out_5471801279801416329[18] = delta_x[17] + nom_x[18];
   out_5471801279801416329[19] = delta_x[18] + nom_x[19];
   out_5471801279801416329[20] = delta_x[19] + nom_x[20];
   out_5471801279801416329[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2016136487027356106) {
   out_2016136487027356106[0] = -nom_x[0] + true_x[0];
   out_2016136487027356106[1] = -nom_x[1] + true_x[1];
   out_2016136487027356106[2] = -nom_x[2] + true_x[2];
   out_2016136487027356106[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2016136487027356106[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2016136487027356106[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2016136487027356106[6] = -nom_x[7] + true_x[7];
   out_2016136487027356106[7] = -nom_x[8] + true_x[8];
   out_2016136487027356106[8] = -nom_x[9] + true_x[9];
   out_2016136487027356106[9] = -nom_x[10] + true_x[10];
   out_2016136487027356106[10] = -nom_x[11] + true_x[11];
   out_2016136487027356106[11] = -nom_x[12] + true_x[12];
   out_2016136487027356106[12] = -nom_x[13] + true_x[13];
   out_2016136487027356106[13] = -nom_x[14] + true_x[14];
   out_2016136487027356106[14] = -nom_x[15] + true_x[15];
   out_2016136487027356106[15] = -nom_x[16] + true_x[16];
   out_2016136487027356106[16] = -nom_x[17] + true_x[17];
   out_2016136487027356106[17] = -nom_x[18] + true_x[18];
   out_2016136487027356106[18] = -nom_x[19] + true_x[19];
   out_2016136487027356106[19] = -nom_x[20] + true_x[20];
   out_2016136487027356106[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4326736777899737312) {
   out_4326736777899737312[0] = 1.0;
   out_4326736777899737312[1] = 0;
   out_4326736777899737312[2] = 0;
   out_4326736777899737312[3] = 0;
   out_4326736777899737312[4] = 0;
   out_4326736777899737312[5] = 0;
   out_4326736777899737312[6] = 0;
   out_4326736777899737312[7] = 0;
   out_4326736777899737312[8] = 0;
   out_4326736777899737312[9] = 0;
   out_4326736777899737312[10] = 0;
   out_4326736777899737312[11] = 0;
   out_4326736777899737312[12] = 0;
   out_4326736777899737312[13] = 0;
   out_4326736777899737312[14] = 0;
   out_4326736777899737312[15] = 0;
   out_4326736777899737312[16] = 0;
   out_4326736777899737312[17] = 0;
   out_4326736777899737312[18] = 0;
   out_4326736777899737312[19] = 0;
   out_4326736777899737312[20] = 0;
   out_4326736777899737312[21] = 0;
   out_4326736777899737312[22] = 1.0;
   out_4326736777899737312[23] = 0;
   out_4326736777899737312[24] = 0;
   out_4326736777899737312[25] = 0;
   out_4326736777899737312[26] = 0;
   out_4326736777899737312[27] = 0;
   out_4326736777899737312[28] = 0;
   out_4326736777899737312[29] = 0;
   out_4326736777899737312[30] = 0;
   out_4326736777899737312[31] = 0;
   out_4326736777899737312[32] = 0;
   out_4326736777899737312[33] = 0;
   out_4326736777899737312[34] = 0;
   out_4326736777899737312[35] = 0;
   out_4326736777899737312[36] = 0;
   out_4326736777899737312[37] = 0;
   out_4326736777899737312[38] = 0;
   out_4326736777899737312[39] = 0;
   out_4326736777899737312[40] = 0;
   out_4326736777899737312[41] = 0;
   out_4326736777899737312[42] = 0;
   out_4326736777899737312[43] = 0;
   out_4326736777899737312[44] = 1.0;
   out_4326736777899737312[45] = 0;
   out_4326736777899737312[46] = 0;
   out_4326736777899737312[47] = 0;
   out_4326736777899737312[48] = 0;
   out_4326736777899737312[49] = 0;
   out_4326736777899737312[50] = 0;
   out_4326736777899737312[51] = 0;
   out_4326736777899737312[52] = 0;
   out_4326736777899737312[53] = 0;
   out_4326736777899737312[54] = 0;
   out_4326736777899737312[55] = 0;
   out_4326736777899737312[56] = 0;
   out_4326736777899737312[57] = 0;
   out_4326736777899737312[58] = 0;
   out_4326736777899737312[59] = 0;
   out_4326736777899737312[60] = 0;
   out_4326736777899737312[61] = 0;
   out_4326736777899737312[62] = 0;
   out_4326736777899737312[63] = 0;
   out_4326736777899737312[64] = 0;
   out_4326736777899737312[65] = 0;
   out_4326736777899737312[66] = -0.5*state[4];
   out_4326736777899737312[67] = -0.5*state[5];
   out_4326736777899737312[68] = -0.5*state[6];
   out_4326736777899737312[69] = 0;
   out_4326736777899737312[70] = 0;
   out_4326736777899737312[71] = 0;
   out_4326736777899737312[72] = 0;
   out_4326736777899737312[73] = 0;
   out_4326736777899737312[74] = 0;
   out_4326736777899737312[75] = 0;
   out_4326736777899737312[76] = 0;
   out_4326736777899737312[77] = 0;
   out_4326736777899737312[78] = 0;
   out_4326736777899737312[79] = 0;
   out_4326736777899737312[80] = 0;
   out_4326736777899737312[81] = 0;
   out_4326736777899737312[82] = 0;
   out_4326736777899737312[83] = 0;
   out_4326736777899737312[84] = 0;
   out_4326736777899737312[85] = 0;
   out_4326736777899737312[86] = 0;
   out_4326736777899737312[87] = 0.5*state[3];
   out_4326736777899737312[88] = 0.5*state[6];
   out_4326736777899737312[89] = -0.5*state[5];
   out_4326736777899737312[90] = 0;
   out_4326736777899737312[91] = 0;
   out_4326736777899737312[92] = 0;
   out_4326736777899737312[93] = 0;
   out_4326736777899737312[94] = 0;
   out_4326736777899737312[95] = 0;
   out_4326736777899737312[96] = 0;
   out_4326736777899737312[97] = 0;
   out_4326736777899737312[98] = 0;
   out_4326736777899737312[99] = 0;
   out_4326736777899737312[100] = 0;
   out_4326736777899737312[101] = 0;
   out_4326736777899737312[102] = 0;
   out_4326736777899737312[103] = 0;
   out_4326736777899737312[104] = 0;
   out_4326736777899737312[105] = 0;
   out_4326736777899737312[106] = 0;
   out_4326736777899737312[107] = 0;
   out_4326736777899737312[108] = -0.5*state[6];
   out_4326736777899737312[109] = 0.5*state[3];
   out_4326736777899737312[110] = 0.5*state[4];
   out_4326736777899737312[111] = 0;
   out_4326736777899737312[112] = 0;
   out_4326736777899737312[113] = 0;
   out_4326736777899737312[114] = 0;
   out_4326736777899737312[115] = 0;
   out_4326736777899737312[116] = 0;
   out_4326736777899737312[117] = 0;
   out_4326736777899737312[118] = 0;
   out_4326736777899737312[119] = 0;
   out_4326736777899737312[120] = 0;
   out_4326736777899737312[121] = 0;
   out_4326736777899737312[122] = 0;
   out_4326736777899737312[123] = 0;
   out_4326736777899737312[124] = 0;
   out_4326736777899737312[125] = 0;
   out_4326736777899737312[126] = 0;
   out_4326736777899737312[127] = 0;
   out_4326736777899737312[128] = 0;
   out_4326736777899737312[129] = 0.5*state[5];
   out_4326736777899737312[130] = -0.5*state[4];
   out_4326736777899737312[131] = 0.5*state[3];
   out_4326736777899737312[132] = 0;
   out_4326736777899737312[133] = 0;
   out_4326736777899737312[134] = 0;
   out_4326736777899737312[135] = 0;
   out_4326736777899737312[136] = 0;
   out_4326736777899737312[137] = 0;
   out_4326736777899737312[138] = 0;
   out_4326736777899737312[139] = 0;
   out_4326736777899737312[140] = 0;
   out_4326736777899737312[141] = 0;
   out_4326736777899737312[142] = 0;
   out_4326736777899737312[143] = 0;
   out_4326736777899737312[144] = 0;
   out_4326736777899737312[145] = 0;
   out_4326736777899737312[146] = 0;
   out_4326736777899737312[147] = 0;
   out_4326736777899737312[148] = 0;
   out_4326736777899737312[149] = 0;
   out_4326736777899737312[150] = 0;
   out_4326736777899737312[151] = 0;
   out_4326736777899737312[152] = 0;
   out_4326736777899737312[153] = 1.0;
   out_4326736777899737312[154] = 0;
   out_4326736777899737312[155] = 0;
   out_4326736777899737312[156] = 0;
   out_4326736777899737312[157] = 0;
   out_4326736777899737312[158] = 0;
   out_4326736777899737312[159] = 0;
   out_4326736777899737312[160] = 0;
   out_4326736777899737312[161] = 0;
   out_4326736777899737312[162] = 0;
   out_4326736777899737312[163] = 0;
   out_4326736777899737312[164] = 0;
   out_4326736777899737312[165] = 0;
   out_4326736777899737312[166] = 0;
   out_4326736777899737312[167] = 0;
   out_4326736777899737312[168] = 0;
   out_4326736777899737312[169] = 0;
   out_4326736777899737312[170] = 0;
   out_4326736777899737312[171] = 0;
   out_4326736777899737312[172] = 0;
   out_4326736777899737312[173] = 0;
   out_4326736777899737312[174] = 0;
   out_4326736777899737312[175] = 1.0;
   out_4326736777899737312[176] = 0;
   out_4326736777899737312[177] = 0;
   out_4326736777899737312[178] = 0;
   out_4326736777899737312[179] = 0;
   out_4326736777899737312[180] = 0;
   out_4326736777899737312[181] = 0;
   out_4326736777899737312[182] = 0;
   out_4326736777899737312[183] = 0;
   out_4326736777899737312[184] = 0;
   out_4326736777899737312[185] = 0;
   out_4326736777899737312[186] = 0;
   out_4326736777899737312[187] = 0;
   out_4326736777899737312[188] = 0;
   out_4326736777899737312[189] = 0;
   out_4326736777899737312[190] = 0;
   out_4326736777899737312[191] = 0;
   out_4326736777899737312[192] = 0;
   out_4326736777899737312[193] = 0;
   out_4326736777899737312[194] = 0;
   out_4326736777899737312[195] = 0;
   out_4326736777899737312[196] = 0;
   out_4326736777899737312[197] = 1.0;
   out_4326736777899737312[198] = 0;
   out_4326736777899737312[199] = 0;
   out_4326736777899737312[200] = 0;
   out_4326736777899737312[201] = 0;
   out_4326736777899737312[202] = 0;
   out_4326736777899737312[203] = 0;
   out_4326736777899737312[204] = 0;
   out_4326736777899737312[205] = 0;
   out_4326736777899737312[206] = 0;
   out_4326736777899737312[207] = 0;
   out_4326736777899737312[208] = 0;
   out_4326736777899737312[209] = 0;
   out_4326736777899737312[210] = 0;
   out_4326736777899737312[211] = 0;
   out_4326736777899737312[212] = 0;
   out_4326736777899737312[213] = 0;
   out_4326736777899737312[214] = 0;
   out_4326736777899737312[215] = 0;
   out_4326736777899737312[216] = 0;
   out_4326736777899737312[217] = 0;
   out_4326736777899737312[218] = 0;
   out_4326736777899737312[219] = 1.0;
   out_4326736777899737312[220] = 0;
   out_4326736777899737312[221] = 0;
   out_4326736777899737312[222] = 0;
   out_4326736777899737312[223] = 0;
   out_4326736777899737312[224] = 0;
   out_4326736777899737312[225] = 0;
   out_4326736777899737312[226] = 0;
   out_4326736777899737312[227] = 0;
   out_4326736777899737312[228] = 0;
   out_4326736777899737312[229] = 0;
   out_4326736777899737312[230] = 0;
   out_4326736777899737312[231] = 0;
   out_4326736777899737312[232] = 0;
   out_4326736777899737312[233] = 0;
   out_4326736777899737312[234] = 0;
   out_4326736777899737312[235] = 0;
   out_4326736777899737312[236] = 0;
   out_4326736777899737312[237] = 0;
   out_4326736777899737312[238] = 0;
   out_4326736777899737312[239] = 0;
   out_4326736777899737312[240] = 0;
   out_4326736777899737312[241] = 1.0;
   out_4326736777899737312[242] = 0;
   out_4326736777899737312[243] = 0;
   out_4326736777899737312[244] = 0;
   out_4326736777899737312[245] = 0;
   out_4326736777899737312[246] = 0;
   out_4326736777899737312[247] = 0;
   out_4326736777899737312[248] = 0;
   out_4326736777899737312[249] = 0;
   out_4326736777899737312[250] = 0;
   out_4326736777899737312[251] = 0;
   out_4326736777899737312[252] = 0;
   out_4326736777899737312[253] = 0;
   out_4326736777899737312[254] = 0;
   out_4326736777899737312[255] = 0;
   out_4326736777899737312[256] = 0;
   out_4326736777899737312[257] = 0;
   out_4326736777899737312[258] = 0;
   out_4326736777899737312[259] = 0;
   out_4326736777899737312[260] = 0;
   out_4326736777899737312[261] = 0;
   out_4326736777899737312[262] = 0;
   out_4326736777899737312[263] = 1.0;
   out_4326736777899737312[264] = 0;
   out_4326736777899737312[265] = 0;
   out_4326736777899737312[266] = 0;
   out_4326736777899737312[267] = 0;
   out_4326736777899737312[268] = 0;
   out_4326736777899737312[269] = 0;
   out_4326736777899737312[270] = 0;
   out_4326736777899737312[271] = 0;
   out_4326736777899737312[272] = 0;
   out_4326736777899737312[273] = 0;
   out_4326736777899737312[274] = 0;
   out_4326736777899737312[275] = 0;
   out_4326736777899737312[276] = 0;
   out_4326736777899737312[277] = 0;
   out_4326736777899737312[278] = 0;
   out_4326736777899737312[279] = 0;
   out_4326736777899737312[280] = 0;
   out_4326736777899737312[281] = 0;
   out_4326736777899737312[282] = 0;
   out_4326736777899737312[283] = 0;
   out_4326736777899737312[284] = 0;
   out_4326736777899737312[285] = 1.0;
   out_4326736777899737312[286] = 0;
   out_4326736777899737312[287] = 0;
   out_4326736777899737312[288] = 0;
   out_4326736777899737312[289] = 0;
   out_4326736777899737312[290] = 0;
   out_4326736777899737312[291] = 0;
   out_4326736777899737312[292] = 0;
   out_4326736777899737312[293] = 0;
   out_4326736777899737312[294] = 0;
   out_4326736777899737312[295] = 0;
   out_4326736777899737312[296] = 0;
   out_4326736777899737312[297] = 0;
   out_4326736777899737312[298] = 0;
   out_4326736777899737312[299] = 0;
   out_4326736777899737312[300] = 0;
   out_4326736777899737312[301] = 0;
   out_4326736777899737312[302] = 0;
   out_4326736777899737312[303] = 0;
   out_4326736777899737312[304] = 0;
   out_4326736777899737312[305] = 0;
   out_4326736777899737312[306] = 0;
   out_4326736777899737312[307] = 1.0;
   out_4326736777899737312[308] = 0;
   out_4326736777899737312[309] = 0;
   out_4326736777899737312[310] = 0;
   out_4326736777899737312[311] = 0;
   out_4326736777899737312[312] = 0;
   out_4326736777899737312[313] = 0;
   out_4326736777899737312[314] = 0;
   out_4326736777899737312[315] = 0;
   out_4326736777899737312[316] = 0;
   out_4326736777899737312[317] = 0;
   out_4326736777899737312[318] = 0;
   out_4326736777899737312[319] = 0;
   out_4326736777899737312[320] = 0;
   out_4326736777899737312[321] = 0;
   out_4326736777899737312[322] = 0;
   out_4326736777899737312[323] = 0;
   out_4326736777899737312[324] = 0;
   out_4326736777899737312[325] = 0;
   out_4326736777899737312[326] = 0;
   out_4326736777899737312[327] = 0;
   out_4326736777899737312[328] = 0;
   out_4326736777899737312[329] = 1.0;
   out_4326736777899737312[330] = 0;
   out_4326736777899737312[331] = 0;
   out_4326736777899737312[332] = 0;
   out_4326736777899737312[333] = 0;
   out_4326736777899737312[334] = 0;
   out_4326736777899737312[335] = 0;
   out_4326736777899737312[336] = 0;
   out_4326736777899737312[337] = 0;
   out_4326736777899737312[338] = 0;
   out_4326736777899737312[339] = 0;
   out_4326736777899737312[340] = 0;
   out_4326736777899737312[341] = 0;
   out_4326736777899737312[342] = 0;
   out_4326736777899737312[343] = 0;
   out_4326736777899737312[344] = 0;
   out_4326736777899737312[345] = 0;
   out_4326736777899737312[346] = 0;
   out_4326736777899737312[347] = 0;
   out_4326736777899737312[348] = 0;
   out_4326736777899737312[349] = 0;
   out_4326736777899737312[350] = 0;
   out_4326736777899737312[351] = 1.0;
   out_4326736777899737312[352] = 0;
   out_4326736777899737312[353] = 0;
   out_4326736777899737312[354] = 0;
   out_4326736777899737312[355] = 0;
   out_4326736777899737312[356] = 0;
   out_4326736777899737312[357] = 0;
   out_4326736777899737312[358] = 0;
   out_4326736777899737312[359] = 0;
   out_4326736777899737312[360] = 0;
   out_4326736777899737312[361] = 0;
   out_4326736777899737312[362] = 0;
   out_4326736777899737312[363] = 0;
   out_4326736777899737312[364] = 0;
   out_4326736777899737312[365] = 0;
   out_4326736777899737312[366] = 0;
   out_4326736777899737312[367] = 0;
   out_4326736777899737312[368] = 0;
   out_4326736777899737312[369] = 0;
   out_4326736777899737312[370] = 0;
   out_4326736777899737312[371] = 0;
   out_4326736777899737312[372] = 0;
   out_4326736777899737312[373] = 1.0;
   out_4326736777899737312[374] = 0;
   out_4326736777899737312[375] = 0;
   out_4326736777899737312[376] = 0;
   out_4326736777899737312[377] = 0;
   out_4326736777899737312[378] = 0;
   out_4326736777899737312[379] = 0;
   out_4326736777899737312[380] = 0;
   out_4326736777899737312[381] = 0;
   out_4326736777899737312[382] = 0;
   out_4326736777899737312[383] = 0;
   out_4326736777899737312[384] = 0;
   out_4326736777899737312[385] = 0;
   out_4326736777899737312[386] = 0;
   out_4326736777899737312[387] = 0;
   out_4326736777899737312[388] = 0;
   out_4326736777899737312[389] = 0;
   out_4326736777899737312[390] = 0;
   out_4326736777899737312[391] = 0;
   out_4326736777899737312[392] = 0;
   out_4326736777899737312[393] = 0;
   out_4326736777899737312[394] = 0;
   out_4326736777899737312[395] = 1.0;
   out_4326736777899737312[396] = 0;
   out_4326736777899737312[397] = 0;
   out_4326736777899737312[398] = 0;
   out_4326736777899737312[399] = 0;
   out_4326736777899737312[400] = 0;
   out_4326736777899737312[401] = 0;
   out_4326736777899737312[402] = 0;
   out_4326736777899737312[403] = 0;
   out_4326736777899737312[404] = 0;
   out_4326736777899737312[405] = 0;
   out_4326736777899737312[406] = 0;
   out_4326736777899737312[407] = 0;
   out_4326736777899737312[408] = 0;
   out_4326736777899737312[409] = 0;
   out_4326736777899737312[410] = 0;
   out_4326736777899737312[411] = 0;
   out_4326736777899737312[412] = 0;
   out_4326736777899737312[413] = 0;
   out_4326736777899737312[414] = 0;
   out_4326736777899737312[415] = 0;
   out_4326736777899737312[416] = 0;
   out_4326736777899737312[417] = 1.0;
   out_4326736777899737312[418] = 0;
   out_4326736777899737312[419] = 0;
   out_4326736777899737312[420] = 0;
   out_4326736777899737312[421] = 0;
   out_4326736777899737312[422] = 0;
   out_4326736777899737312[423] = 0;
   out_4326736777899737312[424] = 0;
   out_4326736777899737312[425] = 0;
   out_4326736777899737312[426] = 0;
   out_4326736777899737312[427] = 0;
   out_4326736777899737312[428] = 0;
   out_4326736777899737312[429] = 0;
   out_4326736777899737312[430] = 0;
   out_4326736777899737312[431] = 0;
   out_4326736777899737312[432] = 0;
   out_4326736777899737312[433] = 0;
   out_4326736777899737312[434] = 0;
   out_4326736777899737312[435] = 0;
   out_4326736777899737312[436] = 0;
   out_4326736777899737312[437] = 0;
   out_4326736777899737312[438] = 0;
   out_4326736777899737312[439] = 1.0;
   out_4326736777899737312[440] = 0;
   out_4326736777899737312[441] = 0;
   out_4326736777899737312[442] = 0;
   out_4326736777899737312[443] = 0;
   out_4326736777899737312[444] = 0;
   out_4326736777899737312[445] = 0;
   out_4326736777899737312[446] = 0;
   out_4326736777899737312[447] = 0;
   out_4326736777899737312[448] = 0;
   out_4326736777899737312[449] = 0;
   out_4326736777899737312[450] = 0;
   out_4326736777899737312[451] = 0;
   out_4326736777899737312[452] = 0;
   out_4326736777899737312[453] = 0;
   out_4326736777899737312[454] = 0;
   out_4326736777899737312[455] = 0;
   out_4326736777899737312[456] = 0;
   out_4326736777899737312[457] = 0;
   out_4326736777899737312[458] = 0;
   out_4326736777899737312[459] = 0;
   out_4326736777899737312[460] = 0;
   out_4326736777899737312[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6381004973772240512) {
   out_6381004973772240512[0] = dt*state[7] + state[0];
   out_6381004973772240512[1] = dt*state[8] + state[1];
   out_6381004973772240512[2] = dt*state[9] + state[2];
   out_6381004973772240512[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6381004973772240512[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6381004973772240512[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6381004973772240512[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6381004973772240512[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6381004973772240512[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6381004973772240512[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6381004973772240512[10] = state[10];
   out_6381004973772240512[11] = state[11];
   out_6381004973772240512[12] = state[12];
   out_6381004973772240512[13] = state[13];
   out_6381004973772240512[14] = state[14];
   out_6381004973772240512[15] = state[15];
   out_6381004973772240512[16] = state[16];
   out_6381004973772240512[17] = state[17];
   out_6381004973772240512[18] = state[18];
   out_6381004973772240512[19] = state[19];
   out_6381004973772240512[20] = state[20];
   out_6381004973772240512[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7688962136229660845) {
   out_7688962136229660845[0] = 1;
   out_7688962136229660845[1] = 0;
   out_7688962136229660845[2] = 0;
   out_7688962136229660845[3] = 0;
   out_7688962136229660845[4] = 0;
   out_7688962136229660845[5] = 0;
   out_7688962136229660845[6] = dt;
   out_7688962136229660845[7] = 0;
   out_7688962136229660845[8] = 0;
   out_7688962136229660845[9] = 0;
   out_7688962136229660845[10] = 0;
   out_7688962136229660845[11] = 0;
   out_7688962136229660845[12] = 0;
   out_7688962136229660845[13] = 0;
   out_7688962136229660845[14] = 0;
   out_7688962136229660845[15] = 0;
   out_7688962136229660845[16] = 0;
   out_7688962136229660845[17] = 0;
   out_7688962136229660845[18] = 0;
   out_7688962136229660845[19] = 0;
   out_7688962136229660845[20] = 0;
   out_7688962136229660845[21] = 0;
   out_7688962136229660845[22] = 1;
   out_7688962136229660845[23] = 0;
   out_7688962136229660845[24] = 0;
   out_7688962136229660845[25] = 0;
   out_7688962136229660845[26] = 0;
   out_7688962136229660845[27] = 0;
   out_7688962136229660845[28] = dt;
   out_7688962136229660845[29] = 0;
   out_7688962136229660845[30] = 0;
   out_7688962136229660845[31] = 0;
   out_7688962136229660845[32] = 0;
   out_7688962136229660845[33] = 0;
   out_7688962136229660845[34] = 0;
   out_7688962136229660845[35] = 0;
   out_7688962136229660845[36] = 0;
   out_7688962136229660845[37] = 0;
   out_7688962136229660845[38] = 0;
   out_7688962136229660845[39] = 0;
   out_7688962136229660845[40] = 0;
   out_7688962136229660845[41] = 0;
   out_7688962136229660845[42] = 0;
   out_7688962136229660845[43] = 0;
   out_7688962136229660845[44] = 1;
   out_7688962136229660845[45] = 0;
   out_7688962136229660845[46] = 0;
   out_7688962136229660845[47] = 0;
   out_7688962136229660845[48] = 0;
   out_7688962136229660845[49] = 0;
   out_7688962136229660845[50] = dt;
   out_7688962136229660845[51] = 0;
   out_7688962136229660845[52] = 0;
   out_7688962136229660845[53] = 0;
   out_7688962136229660845[54] = 0;
   out_7688962136229660845[55] = 0;
   out_7688962136229660845[56] = 0;
   out_7688962136229660845[57] = 0;
   out_7688962136229660845[58] = 0;
   out_7688962136229660845[59] = 0;
   out_7688962136229660845[60] = 0;
   out_7688962136229660845[61] = 0;
   out_7688962136229660845[62] = 0;
   out_7688962136229660845[63] = 0;
   out_7688962136229660845[64] = 0;
   out_7688962136229660845[65] = 0;
   out_7688962136229660845[66] = 1;
   out_7688962136229660845[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7688962136229660845[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7688962136229660845[69] = 0;
   out_7688962136229660845[70] = 0;
   out_7688962136229660845[71] = 0;
   out_7688962136229660845[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7688962136229660845[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7688962136229660845[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7688962136229660845[75] = 0;
   out_7688962136229660845[76] = 0;
   out_7688962136229660845[77] = 0;
   out_7688962136229660845[78] = 0;
   out_7688962136229660845[79] = 0;
   out_7688962136229660845[80] = 0;
   out_7688962136229660845[81] = 0;
   out_7688962136229660845[82] = 0;
   out_7688962136229660845[83] = 0;
   out_7688962136229660845[84] = 0;
   out_7688962136229660845[85] = 0;
   out_7688962136229660845[86] = 0;
   out_7688962136229660845[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7688962136229660845[88] = 1;
   out_7688962136229660845[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7688962136229660845[90] = 0;
   out_7688962136229660845[91] = 0;
   out_7688962136229660845[92] = 0;
   out_7688962136229660845[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7688962136229660845[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7688962136229660845[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7688962136229660845[96] = 0;
   out_7688962136229660845[97] = 0;
   out_7688962136229660845[98] = 0;
   out_7688962136229660845[99] = 0;
   out_7688962136229660845[100] = 0;
   out_7688962136229660845[101] = 0;
   out_7688962136229660845[102] = 0;
   out_7688962136229660845[103] = 0;
   out_7688962136229660845[104] = 0;
   out_7688962136229660845[105] = 0;
   out_7688962136229660845[106] = 0;
   out_7688962136229660845[107] = 0;
   out_7688962136229660845[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7688962136229660845[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7688962136229660845[110] = 1;
   out_7688962136229660845[111] = 0;
   out_7688962136229660845[112] = 0;
   out_7688962136229660845[113] = 0;
   out_7688962136229660845[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7688962136229660845[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7688962136229660845[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7688962136229660845[117] = 0;
   out_7688962136229660845[118] = 0;
   out_7688962136229660845[119] = 0;
   out_7688962136229660845[120] = 0;
   out_7688962136229660845[121] = 0;
   out_7688962136229660845[122] = 0;
   out_7688962136229660845[123] = 0;
   out_7688962136229660845[124] = 0;
   out_7688962136229660845[125] = 0;
   out_7688962136229660845[126] = 0;
   out_7688962136229660845[127] = 0;
   out_7688962136229660845[128] = 0;
   out_7688962136229660845[129] = 0;
   out_7688962136229660845[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7688962136229660845[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7688962136229660845[132] = 1;
   out_7688962136229660845[133] = 0;
   out_7688962136229660845[134] = 0;
   out_7688962136229660845[135] = 0;
   out_7688962136229660845[136] = 0;
   out_7688962136229660845[137] = 0;
   out_7688962136229660845[138] = 0;
   out_7688962136229660845[139] = 0;
   out_7688962136229660845[140] = 0;
   out_7688962136229660845[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7688962136229660845[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7688962136229660845[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7688962136229660845[144] = 0;
   out_7688962136229660845[145] = 0;
   out_7688962136229660845[146] = 0;
   out_7688962136229660845[147] = 0;
   out_7688962136229660845[148] = 0;
   out_7688962136229660845[149] = 0;
   out_7688962136229660845[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7688962136229660845[151] = 0;
   out_7688962136229660845[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7688962136229660845[153] = 0;
   out_7688962136229660845[154] = 1;
   out_7688962136229660845[155] = 0;
   out_7688962136229660845[156] = 0;
   out_7688962136229660845[157] = 0;
   out_7688962136229660845[158] = 0;
   out_7688962136229660845[159] = 0;
   out_7688962136229660845[160] = 0;
   out_7688962136229660845[161] = 0;
   out_7688962136229660845[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7688962136229660845[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7688962136229660845[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7688962136229660845[165] = 0;
   out_7688962136229660845[166] = 0;
   out_7688962136229660845[167] = 0;
   out_7688962136229660845[168] = 0;
   out_7688962136229660845[169] = 0;
   out_7688962136229660845[170] = 0;
   out_7688962136229660845[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7688962136229660845[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7688962136229660845[173] = 0;
   out_7688962136229660845[174] = 0;
   out_7688962136229660845[175] = 0;
   out_7688962136229660845[176] = 1;
   out_7688962136229660845[177] = 0;
   out_7688962136229660845[178] = 0;
   out_7688962136229660845[179] = 0;
   out_7688962136229660845[180] = 0;
   out_7688962136229660845[181] = 0;
   out_7688962136229660845[182] = 0;
   out_7688962136229660845[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7688962136229660845[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7688962136229660845[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7688962136229660845[186] = 0;
   out_7688962136229660845[187] = 0;
   out_7688962136229660845[188] = 0;
   out_7688962136229660845[189] = 0;
   out_7688962136229660845[190] = 0;
   out_7688962136229660845[191] = 0;
   out_7688962136229660845[192] = 0;
   out_7688962136229660845[193] = 0;
   out_7688962136229660845[194] = 0;
   out_7688962136229660845[195] = 0;
   out_7688962136229660845[196] = 0;
   out_7688962136229660845[197] = 0;
   out_7688962136229660845[198] = 1;
   out_7688962136229660845[199] = 0;
   out_7688962136229660845[200] = 0;
   out_7688962136229660845[201] = 0;
   out_7688962136229660845[202] = 0;
   out_7688962136229660845[203] = 0;
   out_7688962136229660845[204] = 0;
   out_7688962136229660845[205] = 0;
   out_7688962136229660845[206] = 0;
   out_7688962136229660845[207] = 0;
   out_7688962136229660845[208] = 0;
   out_7688962136229660845[209] = 0;
   out_7688962136229660845[210] = 0;
   out_7688962136229660845[211] = 0;
   out_7688962136229660845[212] = 0;
   out_7688962136229660845[213] = 0;
   out_7688962136229660845[214] = 0;
   out_7688962136229660845[215] = 0;
   out_7688962136229660845[216] = 0;
   out_7688962136229660845[217] = 0;
   out_7688962136229660845[218] = 0;
   out_7688962136229660845[219] = 0;
   out_7688962136229660845[220] = 1;
   out_7688962136229660845[221] = 0;
   out_7688962136229660845[222] = 0;
   out_7688962136229660845[223] = 0;
   out_7688962136229660845[224] = 0;
   out_7688962136229660845[225] = 0;
   out_7688962136229660845[226] = 0;
   out_7688962136229660845[227] = 0;
   out_7688962136229660845[228] = 0;
   out_7688962136229660845[229] = 0;
   out_7688962136229660845[230] = 0;
   out_7688962136229660845[231] = 0;
   out_7688962136229660845[232] = 0;
   out_7688962136229660845[233] = 0;
   out_7688962136229660845[234] = 0;
   out_7688962136229660845[235] = 0;
   out_7688962136229660845[236] = 0;
   out_7688962136229660845[237] = 0;
   out_7688962136229660845[238] = 0;
   out_7688962136229660845[239] = 0;
   out_7688962136229660845[240] = 0;
   out_7688962136229660845[241] = 0;
   out_7688962136229660845[242] = 1;
   out_7688962136229660845[243] = 0;
   out_7688962136229660845[244] = 0;
   out_7688962136229660845[245] = 0;
   out_7688962136229660845[246] = 0;
   out_7688962136229660845[247] = 0;
   out_7688962136229660845[248] = 0;
   out_7688962136229660845[249] = 0;
   out_7688962136229660845[250] = 0;
   out_7688962136229660845[251] = 0;
   out_7688962136229660845[252] = 0;
   out_7688962136229660845[253] = 0;
   out_7688962136229660845[254] = 0;
   out_7688962136229660845[255] = 0;
   out_7688962136229660845[256] = 0;
   out_7688962136229660845[257] = 0;
   out_7688962136229660845[258] = 0;
   out_7688962136229660845[259] = 0;
   out_7688962136229660845[260] = 0;
   out_7688962136229660845[261] = 0;
   out_7688962136229660845[262] = 0;
   out_7688962136229660845[263] = 0;
   out_7688962136229660845[264] = 1;
   out_7688962136229660845[265] = 0;
   out_7688962136229660845[266] = 0;
   out_7688962136229660845[267] = 0;
   out_7688962136229660845[268] = 0;
   out_7688962136229660845[269] = 0;
   out_7688962136229660845[270] = 0;
   out_7688962136229660845[271] = 0;
   out_7688962136229660845[272] = 0;
   out_7688962136229660845[273] = 0;
   out_7688962136229660845[274] = 0;
   out_7688962136229660845[275] = 0;
   out_7688962136229660845[276] = 0;
   out_7688962136229660845[277] = 0;
   out_7688962136229660845[278] = 0;
   out_7688962136229660845[279] = 0;
   out_7688962136229660845[280] = 0;
   out_7688962136229660845[281] = 0;
   out_7688962136229660845[282] = 0;
   out_7688962136229660845[283] = 0;
   out_7688962136229660845[284] = 0;
   out_7688962136229660845[285] = 0;
   out_7688962136229660845[286] = 1;
   out_7688962136229660845[287] = 0;
   out_7688962136229660845[288] = 0;
   out_7688962136229660845[289] = 0;
   out_7688962136229660845[290] = 0;
   out_7688962136229660845[291] = 0;
   out_7688962136229660845[292] = 0;
   out_7688962136229660845[293] = 0;
   out_7688962136229660845[294] = 0;
   out_7688962136229660845[295] = 0;
   out_7688962136229660845[296] = 0;
   out_7688962136229660845[297] = 0;
   out_7688962136229660845[298] = 0;
   out_7688962136229660845[299] = 0;
   out_7688962136229660845[300] = 0;
   out_7688962136229660845[301] = 0;
   out_7688962136229660845[302] = 0;
   out_7688962136229660845[303] = 0;
   out_7688962136229660845[304] = 0;
   out_7688962136229660845[305] = 0;
   out_7688962136229660845[306] = 0;
   out_7688962136229660845[307] = 0;
   out_7688962136229660845[308] = 1;
   out_7688962136229660845[309] = 0;
   out_7688962136229660845[310] = 0;
   out_7688962136229660845[311] = 0;
   out_7688962136229660845[312] = 0;
   out_7688962136229660845[313] = 0;
   out_7688962136229660845[314] = 0;
   out_7688962136229660845[315] = 0;
   out_7688962136229660845[316] = 0;
   out_7688962136229660845[317] = 0;
   out_7688962136229660845[318] = 0;
   out_7688962136229660845[319] = 0;
   out_7688962136229660845[320] = 0;
   out_7688962136229660845[321] = 0;
   out_7688962136229660845[322] = 0;
   out_7688962136229660845[323] = 0;
   out_7688962136229660845[324] = 0;
   out_7688962136229660845[325] = 0;
   out_7688962136229660845[326] = 0;
   out_7688962136229660845[327] = 0;
   out_7688962136229660845[328] = 0;
   out_7688962136229660845[329] = 0;
   out_7688962136229660845[330] = 1;
   out_7688962136229660845[331] = 0;
   out_7688962136229660845[332] = 0;
   out_7688962136229660845[333] = 0;
   out_7688962136229660845[334] = 0;
   out_7688962136229660845[335] = 0;
   out_7688962136229660845[336] = 0;
   out_7688962136229660845[337] = 0;
   out_7688962136229660845[338] = 0;
   out_7688962136229660845[339] = 0;
   out_7688962136229660845[340] = 0;
   out_7688962136229660845[341] = 0;
   out_7688962136229660845[342] = 0;
   out_7688962136229660845[343] = 0;
   out_7688962136229660845[344] = 0;
   out_7688962136229660845[345] = 0;
   out_7688962136229660845[346] = 0;
   out_7688962136229660845[347] = 0;
   out_7688962136229660845[348] = 0;
   out_7688962136229660845[349] = 0;
   out_7688962136229660845[350] = 0;
   out_7688962136229660845[351] = 0;
   out_7688962136229660845[352] = 1;
   out_7688962136229660845[353] = 0;
   out_7688962136229660845[354] = 0;
   out_7688962136229660845[355] = 0;
   out_7688962136229660845[356] = 0;
   out_7688962136229660845[357] = 0;
   out_7688962136229660845[358] = 0;
   out_7688962136229660845[359] = 0;
   out_7688962136229660845[360] = 0;
   out_7688962136229660845[361] = 0;
   out_7688962136229660845[362] = 0;
   out_7688962136229660845[363] = 0;
   out_7688962136229660845[364] = 0;
   out_7688962136229660845[365] = 0;
   out_7688962136229660845[366] = 0;
   out_7688962136229660845[367] = 0;
   out_7688962136229660845[368] = 0;
   out_7688962136229660845[369] = 0;
   out_7688962136229660845[370] = 0;
   out_7688962136229660845[371] = 0;
   out_7688962136229660845[372] = 0;
   out_7688962136229660845[373] = 0;
   out_7688962136229660845[374] = 1;
   out_7688962136229660845[375] = 0;
   out_7688962136229660845[376] = 0;
   out_7688962136229660845[377] = 0;
   out_7688962136229660845[378] = 0;
   out_7688962136229660845[379] = 0;
   out_7688962136229660845[380] = 0;
   out_7688962136229660845[381] = 0;
   out_7688962136229660845[382] = 0;
   out_7688962136229660845[383] = 0;
   out_7688962136229660845[384] = 0;
   out_7688962136229660845[385] = 0;
   out_7688962136229660845[386] = 0;
   out_7688962136229660845[387] = 0;
   out_7688962136229660845[388] = 0;
   out_7688962136229660845[389] = 0;
   out_7688962136229660845[390] = 0;
   out_7688962136229660845[391] = 0;
   out_7688962136229660845[392] = 0;
   out_7688962136229660845[393] = 0;
   out_7688962136229660845[394] = 0;
   out_7688962136229660845[395] = 0;
   out_7688962136229660845[396] = 1;
   out_7688962136229660845[397] = 0;
   out_7688962136229660845[398] = 0;
   out_7688962136229660845[399] = 0;
   out_7688962136229660845[400] = 0;
   out_7688962136229660845[401] = 0;
   out_7688962136229660845[402] = 0;
   out_7688962136229660845[403] = 0;
   out_7688962136229660845[404] = 0;
   out_7688962136229660845[405] = 0;
   out_7688962136229660845[406] = 0;
   out_7688962136229660845[407] = 0;
   out_7688962136229660845[408] = 0;
   out_7688962136229660845[409] = 0;
   out_7688962136229660845[410] = 0;
   out_7688962136229660845[411] = 0;
   out_7688962136229660845[412] = 0;
   out_7688962136229660845[413] = 0;
   out_7688962136229660845[414] = 0;
   out_7688962136229660845[415] = 0;
   out_7688962136229660845[416] = 0;
   out_7688962136229660845[417] = 0;
   out_7688962136229660845[418] = 1;
   out_7688962136229660845[419] = 0;
   out_7688962136229660845[420] = 0;
   out_7688962136229660845[421] = 0;
   out_7688962136229660845[422] = 0;
   out_7688962136229660845[423] = 0;
   out_7688962136229660845[424] = 0;
   out_7688962136229660845[425] = 0;
   out_7688962136229660845[426] = 0;
   out_7688962136229660845[427] = 0;
   out_7688962136229660845[428] = 0;
   out_7688962136229660845[429] = 0;
   out_7688962136229660845[430] = 0;
   out_7688962136229660845[431] = 0;
   out_7688962136229660845[432] = 0;
   out_7688962136229660845[433] = 0;
   out_7688962136229660845[434] = 0;
   out_7688962136229660845[435] = 0;
   out_7688962136229660845[436] = 0;
   out_7688962136229660845[437] = 0;
   out_7688962136229660845[438] = 0;
   out_7688962136229660845[439] = 0;
   out_7688962136229660845[440] = 1;
}
void h_4(double *state, double *unused, double *out_8910729110262818823) {
   out_8910729110262818823[0] = state[10] + state[13];
   out_8910729110262818823[1] = state[11] + state[14];
   out_8910729110262818823[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5149317107166622839) {
   out_5149317107166622839[0] = 0;
   out_5149317107166622839[1] = 0;
   out_5149317107166622839[2] = 0;
   out_5149317107166622839[3] = 0;
   out_5149317107166622839[4] = 0;
   out_5149317107166622839[5] = 0;
   out_5149317107166622839[6] = 0;
   out_5149317107166622839[7] = 0;
   out_5149317107166622839[8] = 0;
   out_5149317107166622839[9] = 0;
   out_5149317107166622839[10] = 1;
   out_5149317107166622839[11] = 0;
   out_5149317107166622839[12] = 0;
   out_5149317107166622839[13] = 1;
   out_5149317107166622839[14] = 0;
   out_5149317107166622839[15] = 0;
   out_5149317107166622839[16] = 0;
   out_5149317107166622839[17] = 0;
   out_5149317107166622839[18] = 0;
   out_5149317107166622839[19] = 0;
   out_5149317107166622839[20] = 0;
   out_5149317107166622839[21] = 0;
   out_5149317107166622839[22] = 0;
   out_5149317107166622839[23] = 0;
   out_5149317107166622839[24] = 0;
   out_5149317107166622839[25] = 0;
   out_5149317107166622839[26] = 0;
   out_5149317107166622839[27] = 0;
   out_5149317107166622839[28] = 0;
   out_5149317107166622839[29] = 0;
   out_5149317107166622839[30] = 0;
   out_5149317107166622839[31] = 0;
   out_5149317107166622839[32] = 0;
   out_5149317107166622839[33] = 1;
   out_5149317107166622839[34] = 0;
   out_5149317107166622839[35] = 0;
   out_5149317107166622839[36] = 1;
   out_5149317107166622839[37] = 0;
   out_5149317107166622839[38] = 0;
   out_5149317107166622839[39] = 0;
   out_5149317107166622839[40] = 0;
   out_5149317107166622839[41] = 0;
   out_5149317107166622839[42] = 0;
   out_5149317107166622839[43] = 0;
   out_5149317107166622839[44] = 0;
   out_5149317107166622839[45] = 0;
   out_5149317107166622839[46] = 0;
   out_5149317107166622839[47] = 0;
   out_5149317107166622839[48] = 0;
   out_5149317107166622839[49] = 0;
   out_5149317107166622839[50] = 0;
   out_5149317107166622839[51] = 0;
   out_5149317107166622839[52] = 0;
   out_5149317107166622839[53] = 0;
   out_5149317107166622839[54] = 0;
   out_5149317107166622839[55] = 0;
   out_5149317107166622839[56] = 1;
   out_5149317107166622839[57] = 0;
   out_5149317107166622839[58] = 0;
   out_5149317107166622839[59] = 1;
   out_5149317107166622839[60] = 0;
   out_5149317107166622839[61] = 0;
   out_5149317107166622839[62] = 0;
   out_5149317107166622839[63] = 0;
   out_5149317107166622839[64] = 0;
   out_5149317107166622839[65] = 0;
}
void h_9(double *state, double *unused, double *out_2985488469675191362) {
   out_2985488469675191362[0] = state[10];
   out_2985488469675191362[1] = state[11];
   out_2985488469675191362[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2137901828097824631) {
   out_2137901828097824631[0] = 0;
   out_2137901828097824631[1] = 0;
   out_2137901828097824631[2] = 0;
   out_2137901828097824631[3] = 0;
   out_2137901828097824631[4] = 0;
   out_2137901828097824631[5] = 0;
   out_2137901828097824631[6] = 0;
   out_2137901828097824631[7] = 0;
   out_2137901828097824631[8] = 0;
   out_2137901828097824631[9] = 0;
   out_2137901828097824631[10] = 1;
   out_2137901828097824631[11] = 0;
   out_2137901828097824631[12] = 0;
   out_2137901828097824631[13] = 0;
   out_2137901828097824631[14] = 0;
   out_2137901828097824631[15] = 0;
   out_2137901828097824631[16] = 0;
   out_2137901828097824631[17] = 0;
   out_2137901828097824631[18] = 0;
   out_2137901828097824631[19] = 0;
   out_2137901828097824631[20] = 0;
   out_2137901828097824631[21] = 0;
   out_2137901828097824631[22] = 0;
   out_2137901828097824631[23] = 0;
   out_2137901828097824631[24] = 0;
   out_2137901828097824631[25] = 0;
   out_2137901828097824631[26] = 0;
   out_2137901828097824631[27] = 0;
   out_2137901828097824631[28] = 0;
   out_2137901828097824631[29] = 0;
   out_2137901828097824631[30] = 0;
   out_2137901828097824631[31] = 0;
   out_2137901828097824631[32] = 0;
   out_2137901828097824631[33] = 1;
   out_2137901828097824631[34] = 0;
   out_2137901828097824631[35] = 0;
   out_2137901828097824631[36] = 0;
   out_2137901828097824631[37] = 0;
   out_2137901828097824631[38] = 0;
   out_2137901828097824631[39] = 0;
   out_2137901828097824631[40] = 0;
   out_2137901828097824631[41] = 0;
   out_2137901828097824631[42] = 0;
   out_2137901828097824631[43] = 0;
   out_2137901828097824631[44] = 0;
   out_2137901828097824631[45] = 0;
   out_2137901828097824631[46] = 0;
   out_2137901828097824631[47] = 0;
   out_2137901828097824631[48] = 0;
   out_2137901828097824631[49] = 0;
   out_2137901828097824631[50] = 0;
   out_2137901828097824631[51] = 0;
   out_2137901828097824631[52] = 0;
   out_2137901828097824631[53] = 0;
   out_2137901828097824631[54] = 0;
   out_2137901828097824631[55] = 0;
   out_2137901828097824631[56] = 1;
   out_2137901828097824631[57] = 0;
   out_2137901828097824631[58] = 0;
   out_2137901828097824631[59] = 0;
   out_2137901828097824631[60] = 0;
   out_2137901828097824631[61] = 0;
   out_2137901828097824631[62] = 0;
   out_2137901828097824631[63] = 0;
   out_2137901828097824631[64] = 0;
   out_2137901828097824631[65] = 0;
}
void h_10(double *state, double *unused, double *out_8035615168955792815) {
   out_8035615168955792815[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8035615168955792815[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8035615168955792815[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6950019072027878977) {
   out_6950019072027878977[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6950019072027878977[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6950019072027878977[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6950019072027878977[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6950019072027878977[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6950019072027878977[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6950019072027878977[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6950019072027878977[7] = 0;
   out_6950019072027878977[8] = 0;
   out_6950019072027878977[9] = 0;
   out_6950019072027878977[10] = 0;
   out_6950019072027878977[11] = 0;
   out_6950019072027878977[12] = 0;
   out_6950019072027878977[13] = 0;
   out_6950019072027878977[14] = 0;
   out_6950019072027878977[15] = 0;
   out_6950019072027878977[16] = 1;
   out_6950019072027878977[17] = 0;
   out_6950019072027878977[18] = 0;
   out_6950019072027878977[19] = 1;
   out_6950019072027878977[20] = 0;
   out_6950019072027878977[21] = 0;
   out_6950019072027878977[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6950019072027878977[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6950019072027878977[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6950019072027878977[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6950019072027878977[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6950019072027878977[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6950019072027878977[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6950019072027878977[29] = 0;
   out_6950019072027878977[30] = 0;
   out_6950019072027878977[31] = 0;
   out_6950019072027878977[32] = 0;
   out_6950019072027878977[33] = 0;
   out_6950019072027878977[34] = 0;
   out_6950019072027878977[35] = 0;
   out_6950019072027878977[36] = 0;
   out_6950019072027878977[37] = 0;
   out_6950019072027878977[38] = 0;
   out_6950019072027878977[39] = 1;
   out_6950019072027878977[40] = 0;
   out_6950019072027878977[41] = 0;
   out_6950019072027878977[42] = 1;
   out_6950019072027878977[43] = 0;
   out_6950019072027878977[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6950019072027878977[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6950019072027878977[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6950019072027878977[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6950019072027878977[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6950019072027878977[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6950019072027878977[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6950019072027878977[51] = 0;
   out_6950019072027878977[52] = 0;
   out_6950019072027878977[53] = 0;
   out_6950019072027878977[54] = 0;
   out_6950019072027878977[55] = 0;
   out_6950019072027878977[56] = 0;
   out_6950019072027878977[57] = 0;
   out_6950019072027878977[58] = 0;
   out_6950019072027878977[59] = 0;
   out_6950019072027878977[60] = 0;
   out_6950019072027878977[61] = 0;
   out_6950019072027878977[62] = 1;
   out_6950019072027878977[63] = 0;
   out_6950019072027878977[64] = 0;
   out_6950019072027878977[65] = 1;
}
void h_12(double *state, double *unused, double *out_3672646691063821029) {
   out_3672646691063821029[0] = state[0];
   out_3672646691063821029[1] = state[1];
   out_3672646691063821029[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6916168589500195781) {
   out_6916168589500195781[0] = 1;
   out_6916168589500195781[1] = 0;
   out_6916168589500195781[2] = 0;
   out_6916168589500195781[3] = 0;
   out_6916168589500195781[4] = 0;
   out_6916168589500195781[5] = 0;
   out_6916168589500195781[6] = 0;
   out_6916168589500195781[7] = 0;
   out_6916168589500195781[8] = 0;
   out_6916168589500195781[9] = 0;
   out_6916168589500195781[10] = 0;
   out_6916168589500195781[11] = 0;
   out_6916168589500195781[12] = 0;
   out_6916168589500195781[13] = 0;
   out_6916168589500195781[14] = 0;
   out_6916168589500195781[15] = 0;
   out_6916168589500195781[16] = 0;
   out_6916168589500195781[17] = 0;
   out_6916168589500195781[18] = 0;
   out_6916168589500195781[19] = 0;
   out_6916168589500195781[20] = 0;
   out_6916168589500195781[21] = 0;
   out_6916168589500195781[22] = 0;
   out_6916168589500195781[23] = 1;
   out_6916168589500195781[24] = 0;
   out_6916168589500195781[25] = 0;
   out_6916168589500195781[26] = 0;
   out_6916168589500195781[27] = 0;
   out_6916168589500195781[28] = 0;
   out_6916168589500195781[29] = 0;
   out_6916168589500195781[30] = 0;
   out_6916168589500195781[31] = 0;
   out_6916168589500195781[32] = 0;
   out_6916168589500195781[33] = 0;
   out_6916168589500195781[34] = 0;
   out_6916168589500195781[35] = 0;
   out_6916168589500195781[36] = 0;
   out_6916168589500195781[37] = 0;
   out_6916168589500195781[38] = 0;
   out_6916168589500195781[39] = 0;
   out_6916168589500195781[40] = 0;
   out_6916168589500195781[41] = 0;
   out_6916168589500195781[42] = 0;
   out_6916168589500195781[43] = 0;
   out_6916168589500195781[44] = 0;
   out_6916168589500195781[45] = 0;
   out_6916168589500195781[46] = 1;
   out_6916168589500195781[47] = 0;
   out_6916168589500195781[48] = 0;
   out_6916168589500195781[49] = 0;
   out_6916168589500195781[50] = 0;
   out_6916168589500195781[51] = 0;
   out_6916168589500195781[52] = 0;
   out_6916168589500195781[53] = 0;
   out_6916168589500195781[54] = 0;
   out_6916168589500195781[55] = 0;
   out_6916168589500195781[56] = 0;
   out_6916168589500195781[57] = 0;
   out_6916168589500195781[58] = 0;
   out_6916168589500195781[59] = 0;
   out_6916168589500195781[60] = 0;
   out_6916168589500195781[61] = 0;
   out_6916168589500195781[62] = 0;
   out_6916168589500195781[63] = 0;
   out_6916168589500195781[64] = 0;
   out_6916168589500195781[65] = 0;
}
void h_35(double *state, double *unused, double *out_4997180468052778618) {
   out_4997180468052778618[0] = state[7];
   out_4997180468052778618[1] = state[8];
   out_4997180468052778618[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2615702333190352665) {
   out_2615702333190352665[0] = 0;
   out_2615702333190352665[1] = 0;
   out_2615702333190352665[2] = 0;
   out_2615702333190352665[3] = 0;
   out_2615702333190352665[4] = 0;
   out_2615702333190352665[5] = 0;
   out_2615702333190352665[6] = 0;
   out_2615702333190352665[7] = 1;
   out_2615702333190352665[8] = 0;
   out_2615702333190352665[9] = 0;
   out_2615702333190352665[10] = 0;
   out_2615702333190352665[11] = 0;
   out_2615702333190352665[12] = 0;
   out_2615702333190352665[13] = 0;
   out_2615702333190352665[14] = 0;
   out_2615702333190352665[15] = 0;
   out_2615702333190352665[16] = 0;
   out_2615702333190352665[17] = 0;
   out_2615702333190352665[18] = 0;
   out_2615702333190352665[19] = 0;
   out_2615702333190352665[20] = 0;
   out_2615702333190352665[21] = 0;
   out_2615702333190352665[22] = 0;
   out_2615702333190352665[23] = 0;
   out_2615702333190352665[24] = 0;
   out_2615702333190352665[25] = 0;
   out_2615702333190352665[26] = 0;
   out_2615702333190352665[27] = 0;
   out_2615702333190352665[28] = 0;
   out_2615702333190352665[29] = 0;
   out_2615702333190352665[30] = 1;
   out_2615702333190352665[31] = 0;
   out_2615702333190352665[32] = 0;
   out_2615702333190352665[33] = 0;
   out_2615702333190352665[34] = 0;
   out_2615702333190352665[35] = 0;
   out_2615702333190352665[36] = 0;
   out_2615702333190352665[37] = 0;
   out_2615702333190352665[38] = 0;
   out_2615702333190352665[39] = 0;
   out_2615702333190352665[40] = 0;
   out_2615702333190352665[41] = 0;
   out_2615702333190352665[42] = 0;
   out_2615702333190352665[43] = 0;
   out_2615702333190352665[44] = 0;
   out_2615702333190352665[45] = 0;
   out_2615702333190352665[46] = 0;
   out_2615702333190352665[47] = 0;
   out_2615702333190352665[48] = 0;
   out_2615702333190352665[49] = 0;
   out_2615702333190352665[50] = 0;
   out_2615702333190352665[51] = 0;
   out_2615702333190352665[52] = 0;
   out_2615702333190352665[53] = 1;
   out_2615702333190352665[54] = 0;
   out_2615702333190352665[55] = 0;
   out_2615702333190352665[56] = 0;
   out_2615702333190352665[57] = 0;
   out_2615702333190352665[58] = 0;
   out_2615702333190352665[59] = 0;
   out_2615702333190352665[60] = 0;
   out_2615702333190352665[61] = 0;
   out_2615702333190352665[62] = 0;
   out_2615702333190352665[63] = 0;
   out_2615702333190352665[64] = 0;
   out_2615702333190352665[65] = 0;
}
void h_32(double *state, double *unused, double *out_8970276157722010948) {
   out_8970276157722010948[0] = state[3];
   out_8970276157722010948[1] = state[4];
   out_8970276157722010948[2] = state[5];
   out_8970276157722010948[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5237168111897183397) {
   out_5237168111897183397[0] = 0;
   out_5237168111897183397[1] = 0;
   out_5237168111897183397[2] = 0;
   out_5237168111897183397[3] = 1;
   out_5237168111897183397[4] = 0;
   out_5237168111897183397[5] = 0;
   out_5237168111897183397[6] = 0;
   out_5237168111897183397[7] = 0;
   out_5237168111897183397[8] = 0;
   out_5237168111897183397[9] = 0;
   out_5237168111897183397[10] = 0;
   out_5237168111897183397[11] = 0;
   out_5237168111897183397[12] = 0;
   out_5237168111897183397[13] = 0;
   out_5237168111897183397[14] = 0;
   out_5237168111897183397[15] = 0;
   out_5237168111897183397[16] = 0;
   out_5237168111897183397[17] = 0;
   out_5237168111897183397[18] = 0;
   out_5237168111897183397[19] = 0;
   out_5237168111897183397[20] = 0;
   out_5237168111897183397[21] = 0;
   out_5237168111897183397[22] = 0;
   out_5237168111897183397[23] = 0;
   out_5237168111897183397[24] = 0;
   out_5237168111897183397[25] = 0;
   out_5237168111897183397[26] = 1;
   out_5237168111897183397[27] = 0;
   out_5237168111897183397[28] = 0;
   out_5237168111897183397[29] = 0;
   out_5237168111897183397[30] = 0;
   out_5237168111897183397[31] = 0;
   out_5237168111897183397[32] = 0;
   out_5237168111897183397[33] = 0;
   out_5237168111897183397[34] = 0;
   out_5237168111897183397[35] = 0;
   out_5237168111897183397[36] = 0;
   out_5237168111897183397[37] = 0;
   out_5237168111897183397[38] = 0;
   out_5237168111897183397[39] = 0;
   out_5237168111897183397[40] = 0;
   out_5237168111897183397[41] = 0;
   out_5237168111897183397[42] = 0;
   out_5237168111897183397[43] = 0;
   out_5237168111897183397[44] = 0;
   out_5237168111897183397[45] = 0;
   out_5237168111897183397[46] = 0;
   out_5237168111897183397[47] = 0;
   out_5237168111897183397[48] = 0;
   out_5237168111897183397[49] = 1;
   out_5237168111897183397[50] = 0;
   out_5237168111897183397[51] = 0;
   out_5237168111897183397[52] = 0;
   out_5237168111897183397[53] = 0;
   out_5237168111897183397[54] = 0;
   out_5237168111897183397[55] = 0;
   out_5237168111897183397[56] = 0;
   out_5237168111897183397[57] = 0;
   out_5237168111897183397[58] = 0;
   out_5237168111897183397[59] = 0;
   out_5237168111897183397[60] = 0;
   out_5237168111897183397[61] = 0;
   out_5237168111897183397[62] = 0;
   out_5237168111897183397[63] = 0;
   out_5237168111897183397[64] = 0;
   out_5237168111897183397[65] = 0;
   out_5237168111897183397[66] = 0;
   out_5237168111897183397[67] = 0;
   out_5237168111897183397[68] = 0;
   out_5237168111897183397[69] = 0;
   out_5237168111897183397[70] = 0;
   out_5237168111897183397[71] = 0;
   out_5237168111897183397[72] = 1;
   out_5237168111897183397[73] = 0;
   out_5237168111897183397[74] = 0;
   out_5237168111897183397[75] = 0;
   out_5237168111897183397[76] = 0;
   out_5237168111897183397[77] = 0;
   out_5237168111897183397[78] = 0;
   out_5237168111897183397[79] = 0;
   out_5237168111897183397[80] = 0;
   out_5237168111897183397[81] = 0;
   out_5237168111897183397[82] = 0;
   out_5237168111897183397[83] = 0;
   out_5237168111897183397[84] = 0;
   out_5237168111897183397[85] = 0;
   out_5237168111897183397[86] = 0;
   out_5237168111897183397[87] = 0;
}
void h_13(double *state, double *unused, double *out_3153068502881594014) {
   out_3153068502881594014[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3153068502881594014[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3153068502881594014[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7701039023330007817) {
   out_7701039023330007817[0] = 0;
   out_7701039023330007817[1] = 0;
   out_7701039023330007817[2] = 0;
   out_7701039023330007817[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7701039023330007817[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7701039023330007817[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7701039023330007817[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7701039023330007817[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7701039023330007817[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7701039023330007817[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7701039023330007817[10] = 0;
   out_7701039023330007817[11] = 0;
   out_7701039023330007817[12] = 0;
   out_7701039023330007817[13] = 0;
   out_7701039023330007817[14] = 0;
   out_7701039023330007817[15] = 0;
   out_7701039023330007817[16] = 0;
   out_7701039023330007817[17] = 0;
   out_7701039023330007817[18] = 0;
   out_7701039023330007817[19] = 0;
   out_7701039023330007817[20] = 0;
   out_7701039023330007817[21] = 0;
   out_7701039023330007817[22] = 0;
   out_7701039023330007817[23] = 0;
   out_7701039023330007817[24] = 0;
   out_7701039023330007817[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7701039023330007817[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7701039023330007817[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7701039023330007817[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7701039023330007817[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7701039023330007817[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7701039023330007817[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7701039023330007817[32] = 0;
   out_7701039023330007817[33] = 0;
   out_7701039023330007817[34] = 0;
   out_7701039023330007817[35] = 0;
   out_7701039023330007817[36] = 0;
   out_7701039023330007817[37] = 0;
   out_7701039023330007817[38] = 0;
   out_7701039023330007817[39] = 0;
   out_7701039023330007817[40] = 0;
   out_7701039023330007817[41] = 0;
   out_7701039023330007817[42] = 0;
   out_7701039023330007817[43] = 0;
   out_7701039023330007817[44] = 0;
   out_7701039023330007817[45] = 0;
   out_7701039023330007817[46] = 0;
   out_7701039023330007817[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7701039023330007817[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7701039023330007817[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7701039023330007817[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7701039023330007817[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7701039023330007817[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7701039023330007817[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7701039023330007817[54] = 0;
   out_7701039023330007817[55] = 0;
   out_7701039023330007817[56] = 0;
   out_7701039023330007817[57] = 0;
   out_7701039023330007817[58] = 0;
   out_7701039023330007817[59] = 0;
   out_7701039023330007817[60] = 0;
   out_7701039023330007817[61] = 0;
   out_7701039023330007817[62] = 0;
   out_7701039023330007817[63] = 0;
   out_7701039023330007817[64] = 0;
   out_7701039023330007817[65] = 0;
}
void h_14(double *state, double *unused, double *out_2985488469675191362) {
   out_2985488469675191362[0] = state[10];
   out_2985488469675191362[1] = state[11];
   out_2985488469675191362[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2137901828097824631) {
   out_2137901828097824631[0] = 0;
   out_2137901828097824631[1] = 0;
   out_2137901828097824631[2] = 0;
   out_2137901828097824631[3] = 0;
   out_2137901828097824631[4] = 0;
   out_2137901828097824631[5] = 0;
   out_2137901828097824631[6] = 0;
   out_2137901828097824631[7] = 0;
   out_2137901828097824631[8] = 0;
   out_2137901828097824631[9] = 0;
   out_2137901828097824631[10] = 1;
   out_2137901828097824631[11] = 0;
   out_2137901828097824631[12] = 0;
   out_2137901828097824631[13] = 0;
   out_2137901828097824631[14] = 0;
   out_2137901828097824631[15] = 0;
   out_2137901828097824631[16] = 0;
   out_2137901828097824631[17] = 0;
   out_2137901828097824631[18] = 0;
   out_2137901828097824631[19] = 0;
   out_2137901828097824631[20] = 0;
   out_2137901828097824631[21] = 0;
   out_2137901828097824631[22] = 0;
   out_2137901828097824631[23] = 0;
   out_2137901828097824631[24] = 0;
   out_2137901828097824631[25] = 0;
   out_2137901828097824631[26] = 0;
   out_2137901828097824631[27] = 0;
   out_2137901828097824631[28] = 0;
   out_2137901828097824631[29] = 0;
   out_2137901828097824631[30] = 0;
   out_2137901828097824631[31] = 0;
   out_2137901828097824631[32] = 0;
   out_2137901828097824631[33] = 1;
   out_2137901828097824631[34] = 0;
   out_2137901828097824631[35] = 0;
   out_2137901828097824631[36] = 0;
   out_2137901828097824631[37] = 0;
   out_2137901828097824631[38] = 0;
   out_2137901828097824631[39] = 0;
   out_2137901828097824631[40] = 0;
   out_2137901828097824631[41] = 0;
   out_2137901828097824631[42] = 0;
   out_2137901828097824631[43] = 0;
   out_2137901828097824631[44] = 0;
   out_2137901828097824631[45] = 0;
   out_2137901828097824631[46] = 0;
   out_2137901828097824631[47] = 0;
   out_2137901828097824631[48] = 0;
   out_2137901828097824631[49] = 0;
   out_2137901828097824631[50] = 0;
   out_2137901828097824631[51] = 0;
   out_2137901828097824631[52] = 0;
   out_2137901828097824631[53] = 0;
   out_2137901828097824631[54] = 0;
   out_2137901828097824631[55] = 0;
   out_2137901828097824631[56] = 1;
   out_2137901828097824631[57] = 0;
   out_2137901828097824631[58] = 0;
   out_2137901828097824631[59] = 0;
   out_2137901828097824631[60] = 0;
   out_2137901828097824631[61] = 0;
   out_2137901828097824631[62] = 0;
   out_2137901828097824631[63] = 0;
   out_2137901828097824631[64] = 0;
   out_2137901828097824631[65] = 0;
}
void h_33(double *state, double *unused, double *out_2937579763789009053) {
   out_2937579763789009053[0] = state[16];
   out_2937579763789009053[1] = state[17];
   out_2937579763789009053[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5634455447245484522) {
   out_5634455447245484522[0] = 0;
   out_5634455447245484522[1] = 0;
   out_5634455447245484522[2] = 0;
   out_5634455447245484522[3] = 0;
   out_5634455447245484522[4] = 0;
   out_5634455447245484522[5] = 0;
   out_5634455447245484522[6] = 0;
   out_5634455447245484522[7] = 0;
   out_5634455447245484522[8] = 0;
   out_5634455447245484522[9] = 0;
   out_5634455447245484522[10] = 0;
   out_5634455447245484522[11] = 0;
   out_5634455447245484522[12] = 0;
   out_5634455447245484522[13] = 0;
   out_5634455447245484522[14] = 0;
   out_5634455447245484522[15] = 0;
   out_5634455447245484522[16] = 1;
   out_5634455447245484522[17] = 0;
   out_5634455447245484522[18] = 0;
   out_5634455447245484522[19] = 0;
   out_5634455447245484522[20] = 0;
   out_5634455447245484522[21] = 0;
   out_5634455447245484522[22] = 0;
   out_5634455447245484522[23] = 0;
   out_5634455447245484522[24] = 0;
   out_5634455447245484522[25] = 0;
   out_5634455447245484522[26] = 0;
   out_5634455447245484522[27] = 0;
   out_5634455447245484522[28] = 0;
   out_5634455447245484522[29] = 0;
   out_5634455447245484522[30] = 0;
   out_5634455447245484522[31] = 0;
   out_5634455447245484522[32] = 0;
   out_5634455447245484522[33] = 0;
   out_5634455447245484522[34] = 0;
   out_5634455447245484522[35] = 0;
   out_5634455447245484522[36] = 0;
   out_5634455447245484522[37] = 0;
   out_5634455447245484522[38] = 0;
   out_5634455447245484522[39] = 1;
   out_5634455447245484522[40] = 0;
   out_5634455447245484522[41] = 0;
   out_5634455447245484522[42] = 0;
   out_5634455447245484522[43] = 0;
   out_5634455447245484522[44] = 0;
   out_5634455447245484522[45] = 0;
   out_5634455447245484522[46] = 0;
   out_5634455447245484522[47] = 0;
   out_5634455447245484522[48] = 0;
   out_5634455447245484522[49] = 0;
   out_5634455447245484522[50] = 0;
   out_5634455447245484522[51] = 0;
   out_5634455447245484522[52] = 0;
   out_5634455447245484522[53] = 0;
   out_5634455447245484522[54] = 0;
   out_5634455447245484522[55] = 0;
   out_5634455447245484522[56] = 0;
   out_5634455447245484522[57] = 0;
   out_5634455447245484522[58] = 0;
   out_5634455447245484522[59] = 0;
   out_5634455447245484522[60] = 0;
   out_5634455447245484522[61] = 0;
   out_5634455447245484522[62] = 1;
   out_5634455447245484522[63] = 0;
   out_5634455447245484522[64] = 0;
   out_5634455447245484522[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1710202414824543892) {
  H(in_vec, out_1710202414824543892);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5471801279801416329) {
  err_fun(nom_x, delta_x, out_5471801279801416329);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2016136487027356106) {
  inv_err_fun(nom_x, true_x, out_2016136487027356106);
}
void live_H_mod_fun(double *state, double *out_4326736777899737312) {
  H_mod_fun(state, out_4326736777899737312);
}
void live_f_fun(double *state, double dt, double *out_6381004973772240512) {
  f_fun(state,  dt, out_6381004973772240512);
}
void live_F_fun(double *state, double dt, double *out_7688962136229660845) {
  F_fun(state,  dt, out_7688962136229660845);
}
void live_h_4(double *state, double *unused, double *out_8910729110262818823) {
  h_4(state, unused, out_8910729110262818823);
}
void live_H_4(double *state, double *unused, double *out_5149317107166622839) {
  H_4(state, unused, out_5149317107166622839);
}
void live_h_9(double *state, double *unused, double *out_2985488469675191362) {
  h_9(state, unused, out_2985488469675191362);
}
void live_H_9(double *state, double *unused, double *out_2137901828097824631) {
  H_9(state, unused, out_2137901828097824631);
}
void live_h_10(double *state, double *unused, double *out_8035615168955792815) {
  h_10(state, unused, out_8035615168955792815);
}
void live_H_10(double *state, double *unused, double *out_6950019072027878977) {
  H_10(state, unused, out_6950019072027878977);
}
void live_h_12(double *state, double *unused, double *out_3672646691063821029) {
  h_12(state, unused, out_3672646691063821029);
}
void live_H_12(double *state, double *unused, double *out_6916168589500195781) {
  H_12(state, unused, out_6916168589500195781);
}
void live_h_35(double *state, double *unused, double *out_4997180468052778618) {
  h_35(state, unused, out_4997180468052778618);
}
void live_H_35(double *state, double *unused, double *out_2615702333190352665) {
  H_35(state, unused, out_2615702333190352665);
}
void live_h_32(double *state, double *unused, double *out_8970276157722010948) {
  h_32(state, unused, out_8970276157722010948);
}
void live_H_32(double *state, double *unused, double *out_5237168111897183397) {
  H_32(state, unused, out_5237168111897183397);
}
void live_h_13(double *state, double *unused, double *out_3153068502881594014) {
  h_13(state, unused, out_3153068502881594014);
}
void live_H_13(double *state, double *unused, double *out_7701039023330007817) {
  H_13(state, unused, out_7701039023330007817);
}
void live_h_14(double *state, double *unused, double *out_2985488469675191362) {
  h_14(state, unused, out_2985488469675191362);
}
void live_H_14(double *state, double *unused, double *out_2137901828097824631) {
  H_14(state, unused, out_2137901828097824631);
}
void live_h_33(double *state, double *unused, double *out_2937579763789009053) {
  h_33(state, unused, out_2937579763789009053);
}
void live_H_33(double *state, double *unused, double *out_5634455447245484522) {
  H_33(state, unused, out_5634455447245484522);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
